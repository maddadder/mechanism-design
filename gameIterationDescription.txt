
# prisoner's delimma
3,3 0,5
5,0 1,1
^
P1 search iteration goes: 
3
5 <-- max (index 1)

0
1 <-- max (index 1)

P2 search iteration goes: 
3 <-- max (index 0), if best_payouts contains this grid item? false
0 <-- if P1 best_payouts contains this grid item? true
5 <-- max (index 0),  best_payouts contains this grid item? false
1 <-- if P1 best_payouts contains this grid item? true
 ^ P1 says if P2 chooses index 1, then I choose best of index 1

In other words P1 says: 
1. Get my best payouts for each scenario
	e.g. 
	I cooperate and you cooperate (3,3), OR
	I defect and you cooperate (5,0), 
	^ I pick 5 ->(5,0) over 3 ->(3,3) AND also pick
	I stay silent, you cooperate (0,5), OR
	I cooperate, and you cooperate (1,1)
	^ I pick 1 ->(1,1) over 0 ->(0,5)
	So I have (5,0), and (1,1) as available options
	This is grid item (0,1) and (0,1)
2. Then go to P2 and do the same thing except:
	After I get my max payout options and before I pick,
	I do the following:
	if P1 available options contains the same chosen grid item
	then P2 also picks this item

